{
  "name": "minivents",
  "version": "1.1.6",
  "description": "Tiny eventing for javascript",
  "main": "minivents.js",
  "scripts": {
    "test": "gulp test",
    "build": "gulp"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/allouis/minivents.git"
  },
  "keywords": [
    "events",
    "minivents",
    "tiny",
    "event",
    "emitter",
    "eventemitter"
  ],
  "author": {
    "name": "Fabien O'Carroll - allouis"
  },
  "devDependencies": {
    "assert": "^1.1.1",
    "gulp": "~3.6.2",
    "gulp-jshint": "^1.6.2",
    "gulp-mocha": "^0.4.1",
    "gulp-uglify": "~0.3.0",
    "gulp-rename": "~1.2.0"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/allouis/minivents/issues"
  },
  "readme": "minivents\n=========\n\nhttp://allouis.github.io/minivents/\n\nAPI\n===\n\n`on` : Listen to event. Params { type:`String`, callback:`Function` | context:`Object` }\n    \n`off` : Stop listening to event. Params { type:`String` | callback:`Function` } \n    \n`emit`: Emit event. Params { type:`String` | data:`Object` } \n\n`trigger` is no longer supported!!\n\n`:%s/myobj.trigger(/myobj.emit(/` should do the trick in VIM\n    \nExample\n=======\n\n    var sandbox = new Events\n    \n    sandbox.on(\"event\", function(){\n        // do stuff\n    })\n\n    sandbox.emit(\"event\") //does stuff\n\n    sandbox.off(\"event\")\n\n    sandbox.emit(\"event\") //does not do stuff\n    \nMixin Example\n=======\n\n    var sandbox = {\n        otherStuff: true\n    }\n    \n    Events(sandbox)\n    \n    sandbox.on(\"event\", function(){\n        // do stuff\n    })\n\n    sandbox.emit(\"event\") //does stuff\n\n    sandbox.off(\"event\")\n\n    sandbox.emit(\"event\") //does not do stuff\n    \n",
  "readmeFilename": "README.md",
  "_id": "minivents@1.1.6",
  "_from": "minivents@~1.1.6",
  "homepage": "https://github.com/allouis/minivents"
}
